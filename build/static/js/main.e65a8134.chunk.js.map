{"version":3,"sources":["components/navbar.component.js","components/fetch.component.js","components/stockList.component.js","components/untrack.component.js","components/stock.component.js","components/portfolio.component.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","Component","Fetch","props","state","isTracked","data","this","userId","setState","id","axios","post","then","response","stock","catch","error","console","log","trackingBell","onClick","untrackStock","_id","trackStock","Stock","name","indice","value","Provider","color","StocksList","stocks","get","map","current","i","key","style","marginTop","stocksList","endpoint","increase","socketIOClient","on","Portfolio","bind","filter","el","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e65a8134.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class Navbar extends Component {\n\n    render() {\n        return (\n            <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg\">\n                <Link to=\"/\" className=\"navbar-brand\">Home</Link>\n                <div className=\"collapse navbar-collapse\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"navbar-item\">\n                            <Link to=\"/\">Stock List</Link>\n                        </li>\n                        <li className=\"navbar-item\">\n                            <Link to=\"/portfolio\">Portfolio</Link>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        )\n    }\n}","import React, { Component } from 'react';\nimport axios from 'axios';\n\n// importing icons from react-icon library\nimport { FaBell, FaBellSlash } from 'react-icons/fa';\n\nexport default class Fetch extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isTracked: false,\n            data: {}\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.data.userId !== \"\") {\n            this.setState({ isTracked: true });\n        } else {\n            this.setState({ isTracked: false });\n        }\n    }\n\n    untrackStock(id) {\n        axios.post('http://ec2-3-217-82-10.compute-1.amazonaws.com:5000/stocks/update/'+id, {\n                userId: ''\n            })\n            .then(response => {\n                const stock = this.state;\n                stock.data = response.data.stock;\n                if (stock.data.userId === \"\") {\n                    stock.isTracked = false;\n                }\n                this.setState({stock});\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }\n\n    trackStock(id) {\n        axios.post('http://ec2-3-217-82-10.compute-1.amazonaws.com:5000/stocks/update/'+id, {\n                userId: '5e5361bc97ab544798349ccf'\n            })\n            .then(response => {\n                const stock = this.state;\n                stock.data = response.data.stock;\n                if (stock.data.userId !== \"\") {\n                    stock.isTracked = true;\n                }\n                this.setState({stock});\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }\n\n    render() {\n        const isTracked = this.state.isTracked;\n        let trackingBell;\n\n        if (isTracked) {\n            trackingBell = <FaBellSlash onClick={ () => this.untrackStock(this.props.data._id) } />;\n        } else {\n            trackingBell = <FaBell onClick={ () => this.trackStock(this.props.data._id) } />;\n        }\n\n        return (\n            <div>\n                {trackingBell}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\n// import { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nimport Fetch from './fetch.component';\n\n// importing icons from react-icon library\nimport { IconContext } from \"react-icons\";\nimport { FaArrowUp, FaArrowDown } from 'react-icons/fa';\n\nconst Stock = props => (\n    <tr>\n        <td>{props.stock.name}</td>\n        <td>{props.stock.indice}</td>\n        <td>{props.stock.value}</td>\n        <td>\n            <IconContext.Provider value={{ color: \"green\" }}>\n                <FaArrowUp />\n            </IconContext.Provider>\n            <IconContext.Provider value={{ color: \"red\" }}>\n                <FaArrowDown />\n            </IconContext.Provider>\n        </td>\n        <td>\n            <Fetch data={props.stock}/>\n        </td>\n    </tr>\n);\n\nexport default class StocksList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {stocks: []};\n    }\n\n    componentDidMount() {\n        axios.get('http://ec2-3-217-82-10.compute-1.amazonaws.com:5000/stocks')\n            .then(response => {\n                this.setState({stocks: response.data});\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }\n\n    stocksList() {\n        return this.state.stocks.map((current, i) => {\n            return <Stock stock={current} key={i}></Stock>\n        })\n    };\n\n    render() {\n        return (\n            <div>\n                <h3>Stock List</h3>\n                <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n                    <thead>\n                        <tr>\n                            <th>Stock Name</th>\n                            <th>Indice</th>\n                            <th>Value</th>\n                            <th></th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        { this.stocksList() }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport axios from 'axios';\n\n// importing icons from react-icon library\nimport { FaBellSlash } from 'react-icons/fa';\n\nexport default class Fetch extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isTracked: false,\n            data: {}\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.data.userId !== \"\") {\n            this.setState({ isTracked: true });\n        } else {\n            this.setState({ isTracked: false });\n        }\n    }\n\n    untrackStock(id) {\n        axios.post('http://ec2-3-217-82-10.compute-1.amazonaws.com:5000/portfolio/update/'+id, {\n                userId: ''\n            })\n            .then(response => {\n                const stock = this.state;\n                stock.data = {};\n                stock.isTracked = false;\n                this.setState({stock});\n                this.props.untrackStock(id);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }\n\n    render() {\n        const isTracked = this.state.isTracked;\n        let trackingBell;\n\n        if (isTracked) {\n            trackingBell = <FaBellSlash onClick={ () => this.untrackStock(this.props.data._id) } />;\n        }\n\n        return (\n            <div>\n                {trackingBell}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\n\nimport Untrack from './untrack.component';\n\n// importing icons from react-icon library\nimport { IconContext } from \"react-icons\";\nimport { FaArrowUp, FaArrowDown } from 'react-icons/fa';\n\nimport socketIOClient from \"socket.io-client\";\n\nexport default class Stock extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            stock: {},\n            endpoint: \"http://ec2-3-217-82-10.compute-1.amazonaws.com:5000\",\n            increase: null\n        };\n    }\n\n    componentDidMount() {\n        this.setState({\n            stock: this.props.stock\n        });\n        const { endpoint } = this.state;\n        const socket = socketIOClient(endpoint);\n        socket.on(\"changeData\", data => {\n            if (this.state.stock.indice == data.indice) {\n                console.log(data.value);\n                console.log(this.state.stock.value);\n                console.log(this.state.stock.value < data.value);\n                if (data.value < this.state.stock.value) {\n                    this.setState({\n                        increase: false\n                    });\n                } else {\n                    this.setState({\n                        increase: true\n                    });\n                }\n                this.setState({\n                    stock: data\n                });\n            } else if (this.state.stock._id == data._id) {\n                if (this.state.stock.value > data.value) {\n                    this.setState({\n                        increase: false\n                    });\n                } else {\n                    this.setState({\n                        increase: true\n                    });\n                }\n                this.setState({\n                    stock: data\n                });\n            }\n        });\n    }\n\n    render() {\n        return(\n            <tr>\n                <td>{this.state.stock.name}</td>\n                <td>{this.state.stock.indice}</td>\n                <td>{this.state.stock.value}</td>\n                <td>\n                    <IconContext.Provider value={{ color: this.state.increase && this.state.increase != null ? \"green\" : \"gray\" }}>\n                        <FaArrowUp />\n                    </IconContext.Provider>\n                    <IconContext.Provider value={{ color: !this.state.increase && this.state.increase != null ? \"red\" : \"gray\" }}>\n                        <FaArrowDown />\n                    </IconContext.Provider>\n                </td>\n                <td>\n                    <Untrack data={this.state.stock} untrackStock={this.props.untrackStock}/>\n                </td>\n            </tr>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\n// import Untrack from './untrack.component';\nimport Stock from './stock.component';\n\nexport default class Portfolio extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {stocks: []};\n\n        this.untrackStock = this.untrackStock.bind(this);\n    }\n\n    untrackStock(id) {\n        this.setState({\n            stocks: this.state.stocks.filter(el => el._id !== id)\n        });\n    }\n\n    componentDidMount() {\n        axios.get('http://ec2-3-217-82-10.compute-1.amazonaws.com:5000/portfolio', {\n            userId: '5e5361bc97ab544798349ccf'\n        })\n            .then(response => {\n                this.setState({stocks: response.data});\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }\n\n    stocksList() {\n        return this.state.stocks.map((current, i) => {\n            return <Stock stock={current} key={i} untrackStock={this.untrackStock}></Stock>\n        })\n    };\n\n    render() {\n        return (\n            <div>\n                <h3>Your Portfolio</h3>\n                <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n                    <thead>\n                        <tr>\n                            <th>Stock Name</th>\n                            <th>Indice</th>\n                            <th>Value</th>\n                            <th></th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        { this.stocksList() }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\n\n// import logo from './logo.svg';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Navbar from \"./components/navbar.component\";\nimport StocksList from \"./components/stockList.component\";\nimport Portfolio from \"./components/portfolio.component\";\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <br />\n      <Route path=\"/\" exact component={StocksList} />\n      <Route path=\"/portfolio\" component={Portfolio} />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// renders the main component App and loads it into the element with id root\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}